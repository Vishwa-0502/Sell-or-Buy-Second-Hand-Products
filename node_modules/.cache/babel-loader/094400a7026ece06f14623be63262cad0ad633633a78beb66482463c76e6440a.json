{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\sE_Web\\\\Frontend\\\\src\\\\components\\\\SearchBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = ({\n  history,\n  products\n}) => {\n  _s();\n  const [keyword, setKeyword] = useState('');\n  const submitHandler = e => {\n    e.preventDefault();\n    const trimmedKeyword = keyword.trim();\n    if (trimmedKeyword) {\n      // Filter products based on keyword and update the URL\n      const filteredProducts = products.filter(product => product.name.toLowerCase().includes(trimmedKeyword.toLowerCase()));\n      history.push({\n        pathname: '/search',\n        search: `?q=${trimmedKeyword}`,\n        state: {\n          filteredProducts\n        }\n      });\n    } else {\n      // If keyword is empty, reset URL to the home page\n      history.push('/');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: submitHandler,\n    inline: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      name: \"q\",\n      value: keyword,\n      onChange: e => setKeyword(e.target.value),\n      placeholder: \"Search Products...\",\n      className: \"mr-sm-2 ml-sm-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      className: \"p-2\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBox, \"Spc9aTC4h+uoD4yIDnlnMjpTYMA=\");\n_c = SearchBox;\nexport default SearchBox;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useState","Form","Button","jsxDEV","_jsxDEV","SearchBox","history","products","_s","keyword","setKeyword","submitHandler","e","preventDefault","trimmedKeyword","trim","filteredProducts","filter","product","name","toLowerCase","includes","push","pathname","search","state","onSubmit","inline","children","Control","type","value","onChange","target","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/sE_Web/Frontend/src/components/SearchBox.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst SearchBox = ({ history, products }) => {\n  const [keyword, setKeyword] = useState('');\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const trimmedKeyword = keyword.trim();\n    if (trimmedKeyword) {\n      // Filter products based on keyword and update the URL\n      const filteredProducts = products.filter(product =>\n        product.name.toLowerCase().includes(trimmedKeyword.toLowerCase())\n      );\n      history.push({\n        pathname: '/search',\n        search: `?q=${trimmedKeyword}`,\n        state: { filteredProducts }\n      });\n    } else {\n      // If keyword is empty, reset URL to the home page\n      history.push('/');\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        value={keyword}\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='Search Products...'\n        className='mr-sm-2 ml-sm-5'\n      />\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,cAAc,GAAGL,OAAO,CAACM,IAAI,CAAC,CAAC;IACrC,IAAID,cAAc,EAAE;MAClB;MACA,MAAME,gBAAgB,GAAGT,QAAQ,CAACU,MAAM,CAACC,OAAO,IAC9CA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,cAAc,CAACM,WAAW,CAAC,CAAC,CAClE,CAAC;MACDd,OAAO,CAACgB,IAAI,CAAC;QACXC,QAAQ,EAAE,SAAS;QACnBC,MAAM,EAAG,MAAKV,cAAe,EAAC;QAC9BW,KAAK,EAAE;UAAET;QAAiB;MAC5B,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAV,OAAO,CAACgB,IAAI,CAAC,GAAG,CAAC;IACnB;EACF,CAAC;EAED,oBACElB,OAAA,CAACH,IAAI;IAACyB,QAAQ,EAAEf,aAAc;IAACgB,MAAM;IAAAC,QAAA,gBACnCxB,OAAA,CAACH,IAAI,CAAC4B,OAAO;MACXC,IAAI,EAAC,MAAM;MACXX,IAAI,EAAC,GAAG;MACRY,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGpB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC,oBAAoB;MAChCC,SAAS,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFnC,OAAA,CAACF,MAAM;MAAC4B,IAAI,EAAC,QAAQ;MAACU,OAAO,EAAC,iBAAiB;MAACL,SAAS,EAAC,KAAK;MAAAP,QAAA,EAAC;IAEhE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAC/B,EAAA,CArCIH,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}